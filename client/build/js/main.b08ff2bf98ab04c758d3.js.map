{"version":3,"sources":["webpack:///./client/src/components/MovieCard/MovieCard.scss","webpack:///./client/src/containers/MovieDetails/MovieDetails.scss","webpack:///./client/src/containers/Home/Home.scss","webpack:///./client/src/components/MovieCategory/MovieCategory.scss","webpack:///./client/src/containers/History/History.scss","webpack:///./client/src/RestClient.js","webpack:///./client/src/actionTypes/moviesActionTypes.js","webpack:///./client/src/utils/utils.js","webpack:///./client/src/sagas/moviesSaga.js","webpack:///./client/src/actionTypes/movieDetailsActionTypes.js","webpack:///./client/src/sagas/movieDetailsSaga.js","webpack:///./client/src/actionTypes/movieHistoryTypes.js","webpack:///./client/src/sagas/movieHistorySaga.js","webpack:///./client/src/reducers/moviesReduser.js","webpack:///./client/src/reducers/movieDetailsReduser.js","webpack:///./client/src/reducers/setMovieHistoryReducer.js","webpack:///./client/src/reducers/getMovieHistoryReducer.js","webpack:///./client/src/reducers/index.js","webpack:///./client/src/components/Header/Header.jsx","webpack:///./client/src/App.jsx","webpack:///./client/src/actions/moviesAction.js","webpack:///./client/src/components/MovieCard/MovieCard.jsx","webpack:///./client/src/components/MovieCategory/MovieCategory.jsx","webpack:///./client/src/containers/Home/Home.jsx","webpack:///./client/src/actions/movieHistoryAction.js","webpack:///./client/src/containers/History/History.jsx","webpack:///./client/src/actions/movieDetailsAction.js","webpack:///./client/src/components/VideoPlayer/VideoPlayer.jsx","webpack:///./client/src/containers/MovieDetails/MovieDetails.jsx","webpack:///./client/src/createStore.js","webpack:///./client/src/routes.js","webpack:///./client/src/index.jsx","webpack:///./client/src/sagas/index.js","webpack:///./client/src/components/Header/Header.scss","webpack:///./client/src/components/VideoPlayer/VideoPlayer.scss"],"names":["module","exports","instance","axios","create","baseURL","window","location","href","invokeAPI","url","requestMethod","payload","reqHeaders","method","toLowerCase","params","headers","data","getApiParams","then","response","status","isSuccess","catch","error","FETCH_MOVIES","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_FAILURE","FETCH_MOVIES_ERROR","getCategoryList","reduce","accum","item","categories","forEach","element","findIndex","catgObj","id","push","filterDataByCategory","catgList","accm","dataItem","newDataList","filter","catgItem","dataObj","generateCategory","acc","title","fetchMovieListHelper","result","call","dataList","entries","length","newMovieData","put","type","message","fetchMoviesWatcher","takeLatest","FETCH_MOVIES_DETAILS","FETCH_MOVIES_DETAILS_SUCCESS","FETCH_MOVIES_DETAILS_ERROR","movieDetailsSelector","movieId","find","fetchMovieDetailsHelper","action","movieDetail","fetchMovieDetailsWatcher","SET_MOVIE_HISTORY","SET_MOVIE_HISTORY_SUCCESS","SET_MOVIE_HISTORY_FAILURE","SET_MOVIE_HISTORY_ERROR","GET_MOVIE_HISTORY","GET_MOVIE_HISTORY_SUCCESS","GET_MOVIE_HISTORY_FAILURE","GET_MOVIE_HISTORY_ERROR","movieHistorySelector","historyDataList","getMovieHistoryHelper","setMovieHistoryHelper","getMovieHistoryWatcher","setMovieHistoryWatcher","initialState","serviceError","combineReducers","moviesData","state","moviesDetailsData","setHistoryData","getHistoryData","Header","className","styles","headerContainer","data-test-id","vodBtn","to","hLink","App","route","renderRoutes","routes","fetchMovies","MovieCard","isFromHistory","cardMainContainer","cardContainer","cardLink","src","images","alt","defaultProps","settings","dots","infinite","speed","lazyLoad","slidesToShow","slidesToScroll","responsive","breakpoint","arrows","MovieCategory","sliderContainer","map","Home","Component","componentDidMount","actions","this","props","render","movieListData","homeContainer","connect","dispatch","bindActionCreators","setMovieHistory","getMovieHistory","History","movieHistoryData","historyContainer","fetchMoviesDetails","VideoPlayer","togglePlay","videoPlayerContainer","crossBtn","onClick","crossIcon","videoContainer","autoPlay","controls","contents","format","MovieDetails","constructor","super","showPlayer","search","searchObj","qs","parse","fromHistory","setState","movieDetailsContainer","detailContainer","infoContainer","desc","description","content","itemHeader","credits","name","parentalRatings","rating","scheme","watchNowBtn","playIcon","aria-hidden","watchNowLabel","imgContainer","sagaRunner","sagaMiddleware","store","component","path","exact","HomePage","fork","createSagaMiddleware","createStore","reducers","applyMiddleware","run","ReactDOM","hydrate","document","querySelector"],"mappings":"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","file":"js/main.b08ff2bf98ab04c758d3.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardMainContainer\":\"cardMainContainer___BJ1a-\",\"cardContainer\":\"cardContainer___3pikU\",\"cardLink\":\"cardLink___1VTxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieDetailsContainer\":\"movieDetailsContainer___3nAEd\",\"detailContainer\":\"detailContainer___2IpFB\",\"infoContainer\":\"infoContainer___2Uw-D\",\"title\":\"title___1tN-1\",\"desc\":\"desc___2cPU1\",\"content\":\"content___g3erY\",\"item\":\"item___3MZN5\",\"itemHeader\":\"itemHeader___3uNaF\",\"imgContainer\":\"imgContainer___3tYGu\",\"watchNowBtn\":\"watchNowBtn___nxoRO\",\"playIcon\":\"playIcon___3Caa9\",\"watchNowLabel\":\"watchNowLabel___2IsCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeContainer\":\"homeContainer___vn6p0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderContainer\":\"sliderContainer___3-i_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"historyContainer\":\"historyContainer___1t61c\"};","/* istanbul ignore file */\nimport axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: window.location.href,\n});\n\nconst getApiParams = (url, requestMethod, payload, reqHeaders = {}) => {\n  const method = requestMethod && requestMethod.toLowerCase();\n  const params = {\n    url,\n    method,\n    headers: reqHeaders,\n  };\n\n  if (method !== 'get' && payload) {\n    params.data = payload;\n  }\n\n  return params;\n};\n\nconst invokeAPI = (url, requestMethod, payload, reqHeaders) => {\n  return instance(getApiParams(url, requestMethod, payload, reqHeaders))\n    .then(response => {\n      const { status } = response;\n      return {\n        status,\n        data: response.data,\n        headers: response.headers,\n        isSuccess: true,\n      };\n    })\n    .catch(error => {\n      const { status } = error;\n      return {\n        status,\n        error,\n        isSuccess: false,\n      };\n    });\n};\n\nexport default invokeAPI;\n","export const FETCH_MOVIES = 'FETCH_MOVIES';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIES_FAILURE = 'FETCH_MOVIES_FAILURE';\nexport const FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR';\n","/**\n * Used to get the list category object\n * @function :  getCategoryList\n * @param {Array} data - Movies list data.\n * @returns {Array} - all category list.\n */\nexport const getCategoryList = (data = []) => {\n  return data.reduce((accum, item) => {\n    item.categories.forEach(element => {\n      const itemIndex = accum.findIndex(catgObj => catgObj.id === element.id);\n      if (itemIndex === -1) {\n        accum.push(element);\n      }\n    });\n    return accum;\n  }, []);\n};\n\n/**\n * Used to get the list of data grouped by category\n * @function :  filterDataByCategory\n * @param {Array} data - Movies list data.\n * @returns {Array} - Movies list data grouped by category.\n */\nexport const filterDataByCategory = (data = []) => {\n  const catgList = getCategoryList(data);\n  return catgList.reduce((accm, dataItem) => {\n    const newDataList = data.filter(item => {\n      const catgIndex = item.categories.findIndex(\n        catgItem => dataItem.id === catgItem.id,\n      );\n\n      return catgIndex !== -1;\n    });\n    const dataObj = { ...dataItem };\n    dataObj.data = newDataList;\n    accm.push(dataObj);\n    return accm;\n  }, []);\n};\n\n/**\n * Used to get the all category present in a list as a coma separated string\n * @function :  generateCategory\n * @param {Array} categories - categories list data.\n * @returns {String} - coma separated categories string\n */\nexport const generateCategory = (categories = []) => {\n  return categories.reduce((acc, item) => {\n    return acc ? acc + ', ' + item.title : item.title;\n  }, '');\n};\n\n/**\n * Used to set the data in local storage\n * @function :  setHistoryData\n * @param {String} key - key to set the data.\n * @param {Array} value - data to be store in local storage\n */\nexport const setHistoryData = (key, value) => {\n  window.localStorage.setItem(key, JSON.stringify(value));\n};\n\n/**\n * Used to get the data from local storage\n * @function :  getHistoryDataFromStorage\n * @param {String} key - key to set the data.\n * @returns {Array} - data retrived from local storage\n */\nexport const getHistoryDataFromStorage = key => {\n  return JSON.parse(window.localStorage.getItem(key));\n};\n\n/**\n * Used to update the data in local storage with a given key\n * @function :  updateHistoryData\n * @param {String} key - key to upadte the data.\n * @param {Array} value - data to be store in local storage\n */\nexport const updateHistoryData = (key, value) => {\n  const historyData = getHistoryDataFromStorage(key);\n  if (historyData.findIndex(item => item.id === value.id) === -1) {\n    historyData.push(value);\n  }\n  setHistoryData(key, historyData);\n};\n","import { takeLatest, put, call } from 'redux-saga/effects';\nimport invokeAPI from '../RestClient';\nimport {\n  FETCH_MOVIES,\n  FETCH_MOVIES_SUCCESS,\n  FETCH_MOVIES_FAILURE,\n  FETCH_MOVIES_ERROR,\n} from '../actionTypes/moviesActionTypes';\nimport { filterDataByCategory } from '../utils/utils';\n\nexport function* fetchMovieListHelper() {\n  try {\n    const result = yield call(invokeAPI, 'assets/mockdata/movies.json', 'get');\n    if (result.isSuccess) {\n      const dataList =\n        result.data && result.data.entries.length > 0 && result.data.entries;\n      const newMovieData = dataList ? filterDataByCategory(dataList) : [];\n      yield put({ type: FETCH_MOVIES_SUCCESS, payload: newMovieData });\n    } else {\n      yield put({ type: FETCH_MOVIES_FAILURE, payload: result.error });\n    }\n  } catch (error) {\n    yield put({ type: FETCH_MOVIES_ERROR, error: { message: error.message } });\n  }\n}\n\nexport function* fetchMoviesWatcher() {\n  yield takeLatest(FETCH_MOVIES, fetchMovieListHelper);\n}\n","export const FETCH_MOVIES_DETAILS = 'FETCH_MOVIES_DETAILS';\nexport const FETCH_MOVIES_DETAILS_SUCCESS = 'FETCH_MOVIES_DETAILS_SUCCESS';\nexport const FETCH_MOVIES_DETAILS_ERROR = 'FETCH_MOVIES_DETAILS_ERROR';\n","import { takeLatest, put, call } from 'redux-saga/effects';\nimport {\n  FETCH_MOVIES_DETAILS,\n  FETCH_MOVIES_DETAILS_SUCCESS,\n  FETCH_MOVIES_DETAILS_ERROR,\n} from '../actionTypes/movieDetailsActionTypes';\nimport invokeAPI from '../RestClient';\n\nconst movieDetailsSelector = (result, movieId) => {\n  const {\n    data: { entries = [] },\n  } = result;\n  const movieDetailData = entries.find(item => {\n    return item.id === movieId;\n  });\n  return movieDetailData;\n};\n\nexport function* fetchMovieDetailsHelper(action) {\n  try {\n    const result = yield call(invokeAPI, 'assets/mockdata/movies.json', 'get');\n    const movieDetail = movieDetailsSelector(result, action.movieId);\n    yield put({ type: FETCH_MOVIES_DETAILS_SUCCESS, payload: movieDetail });\n  } catch (error) {\n    yield put({\n      type: FETCH_MOVIES_DETAILS_ERROR,\n      error: { message: error.message },\n    });\n  }\n}\n\nexport function* fetchMovieDetailsWatcher() {\n  yield takeLatest(FETCH_MOVIES_DETAILS, fetchMovieDetailsHelper);\n}\n","export const SET_MOVIE_HISTORY = 'SET_MOVIE_HISTORY';\nexport const SET_MOVIE_HISTORY_SUCCESS = 'SET_MOVIE_HISTORY_SUCCESS';\nexport const SET_MOVIE_HISTORY_FAILURE = 'SET_MOVIE_HISTORY_FAILURE';\nexport const SET_MOVIE_HISTORY_ERROR = 'SET_MOVIE_HISTORY_ERROR';\nexport const GET_MOVIE_HISTORY = 'GET_MOVIE_HISTORY';\nexport const GET_MOVIE_HISTORY_SUCCESS = 'GET_MOVIE_HISTORY_SUCCESS';\nexport const GET_MOVIE_HISTORY_FAILURE = 'GET_MOVIE_HISTORY_FAILURE';\nexport const GET_MOVIE_HISTORY_ERROR = 'GET_MOVIE_HISTORY_ERROR';\n","import { takeLatest, put, call } from 'redux-saga/effects';\nimport {\n  SET_MOVIE_HISTORY,\n  SET_MOVIE_HISTORY_SUCCESS,\n  SET_MOVIE_HISTORY_FAILURE,\n  SET_MOVIE_HISTORY_ERROR,\n  GET_MOVIE_HISTORY,\n  GET_MOVIE_HISTORY_SUCCESS,\n  GET_MOVIE_HISTORY_FAILURE,\n  GET_MOVIE_HISTORY_ERROR,\n} from '../actionTypes/movieHistoryTypes';\nimport invokeAPI from '../RestClient';\n\nconst movieHistorySelector = (dataList, historyDataList) => {\n  const newDataList = [];\n  const { entries = [] } = dataList;\n  historyDataList.forEach(element => {\n    const dataObj = entries.find(item => {\n      return item.id === element.movieId;\n    });\n    if (dataObj) {\n      newDataList.push(dataObj);\n    }\n  });\n  return newDataList;\n};\nexport function* getMovieHistoryHelper() {\n  try {\n    const result = yield call(invokeAPI, '/api/history', 'get');\n    if (result.isSuccess) {\n      const response = yield call(\n        invokeAPI,\n        'assets/mockdata/movies.json',\n        'get',\n      );\n      if (response.isSuccess) {\n        const data = movieHistorySelector(response.data, result.data);\n        yield put({ type: GET_MOVIE_HISTORY_SUCCESS, payload: data });\n      } else {\n        yield put({ type: GET_MOVIE_HISTORY_SUCCESS, payload: [] });\n      }\n    } else {\n      yield put({ type: GET_MOVIE_HISTORY_FAILURE, payload: result.error });\n    }\n  } catch (error) {\n    yield put({\n      type: GET_MOVIE_HISTORY_ERROR,\n      error: { message: error.message },\n    });\n  }\n}\n\nexport function* setMovieHistoryHelper(action) {\n  try {\n    const result = yield call(\n      invokeAPI,\n      '/api/history',\n      'post',\n      action.payload,\n    );\n    if (result.isSuccess) {\n      yield put({ type: SET_MOVIE_HISTORY_SUCCESS, payload: result.data });\n    } else {\n      yield put({ type: SET_MOVIE_HISTORY_FAILURE, payload: result.error });\n    }\n  } catch (error) {\n    yield put({\n      type: SET_MOVIE_HISTORY_ERROR,\n      error: { message: error.message },\n    });\n  }\n}\n\nexport function* getMovieHistoryWatcher() {\n  yield takeLatest(GET_MOVIE_HISTORY, getMovieHistoryHelper);\n}\n\nexport function* setMovieHistoryWatcher() {\n  yield takeLatest(SET_MOVIE_HISTORY, setMovieHistoryHelper);\n}\n","import {\n  FETCH_MOVIES_SUCCESS,\n  FETCH_MOVIES_FAILURE,\n  FETCH_MOVIES_ERROR,\n} from '../actionTypes/moviesActionTypes';\n\nconst initialState = {\n  isSuccess: false,\n  data: [],\n  serviceError: null,\n  error: null,\n};\n\n/**\n * It will receive all the data use for the movie component(For Home page)\n * @function :  dataReducer\n * @param {object} state:contain initial and final state of movie details data\n * @param {object} action:return the action object\n */\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    /**\n     * Dispatched from movies saga when api call is success\n     */\n    case FETCH_MOVIES_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n        isSuccess: true,\n      };\n\n    /**\n     * Dispatched from movies saga when api call fails\n     */\n    case FETCH_MOVIES_FAILURE:\n      return {\n        ...state,\n        serviceError: action.payload,\n        isSuccess: false,\n      };\n\n    /**\n     * Dispatched from movies saga when there is an error in the saga\n     */\n    case FETCH_MOVIES_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        isSuccess: false,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_MOVIES_DETAILS_SUCCESS,\n  FETCH_MOVIES_DETAILS_ERROR,\n} from '../actionTypes/movieDetailsActionTypes';\n\nconst initialState = {\n  data: {},\n  error: null,\n};\n\n/**\n * It will receive all the data use for the movie details component\n * @function :  dataReducer\n * @param {object} state:contain initial and final state of movie details data\n * @param {object} action:return the action object\n */\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    /**\n     * Dispatched from movie details saga when api call is success\n     */\n    case FETCH_MOVIES_DETAILS_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n      };\n    /**\n     * Dispatched from movie details saga when there is an error in the saga\n     */\n    case FETCH_MOVIES_DETAILS_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  SET_MOVIE_HISTORY_SUCCESS,\n  SET_MOVIE_HISTORY_FAILURE,\n  SET_MOVIE_HISTORY_ERROR,\n} from '../actionTypes/movieHistoryTypes';\n\nconst initialState = {\n  isSuccess: false,\n  data: {},\n  serviceError: null,\n  error: null,\n};\n\n/**\n * It will receive all the data use for the watch history component(For History)\n * @function :  dataReducer\n * @param {object} state:contain initial and final state of set history details data\n * @param {object} action:return the action object\n */\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    /**\n     * Dispatched from movie history saga when api call is success\n     */\n    case SET_MOVIE_HISTORY_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n        isSuccess: true,\n      };\n\n    /**\n     * Dispatched from movie history saga when api call fails\n     */\n    case SET_MOVIE_HISTORY_FAILURE:\n      return {\n        ...state,\n        serviceError: action.payload,\n        isSuccess: false,\n      };\n\n    /**\n     * Dispatched from movie history saga when there is an error in the saga\n     */\n    case SET_MOVIE_HISTORY_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        isSuccess: false,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_MOVIE_HISTORY_SUCCESS,\n  GET_MOVIE_HISTORY_FAILURE,\n  GET_MOVIE_HISTORY_ERROR,\n} from '../actionTypes/movieHistoryTypes';\n\nconst initialState = {\n  isSuccess: false,\n  data: [],\n  serviceError: null,\n  error: null,\n};\n\n/**\n * It will receive all the data use for the watch history component(For History)\n * @function :  dataReducer\n * @param {object} state:contain initial and final state of Get history details data\n * @param {object} action:return the action object\n */\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    /**\n     * Dispatched from movie history saga when api call is success\n     */\n    case GET_MOVIE_HISTORY_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n        isSuccess: true,\n      };\n\n    /**\n     * Dispatched from movie history saga when api call fails\n     */\n    case GET_MOVIE_HISTORY_FAILURE:\n      return {\n        ...state,\n        serviceError: action.payload,\n        isSuccess: false,\n      };\n\n    /**\n     * Dispatched from movie history saga when there is an error in the saga\n     */\n    case GET_MOVIE_HISTORY_ERROR:\n      return {\n        ...state,\n        error: action.error,\n        isSuccess: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport moviesReduser from './moviesReduser';\nimport moviesDetailsReduser from './movieDetailsReduser';\nimport setMovieHistoryReducer from './setMovieHistoryReducer';\nimport getMovieHistoryReducer from './getMovieHistoryReducer';\n\nexport default combineReducers({\n  moviesData: moviesReduser,\n  moviesDetailsData: moviesDetailsReduser,\n  setHistoryData: setMovieHistoryReducer,\n  getHistoryData: getMovieHistoryReducer,\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Header.scss';\n\n/**\n * Its a functional component uded to display header having navigation link of Home and History\n */\nconst Header = () => {\n  return (\n    <header className={styles.headerContainer} data-test-id=\"headerContainer\">\n      <Link className={styles.vodBtn} to=\"/\">\n        VOD\n      </Link>\n      <div>\n        <Link className={styles.hLink} to=\"/\">\n          Home\n        </Link>\n        <Link className={styles.hLink} to=\"/history\">\n          History\n        </Link>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { renderRoutes } from 'react-router-config';\nimport Header from './components/Header/Header';\nimport './styles.scss';\n\nconst App = ({ route }) => {\n  return (\n    <div data-test-id=\"appContainer\">\n      <Header />\n      {renderRoutes(route.routes)}\n    </div>\n  );\n};\n\nApp.propTypes = {\n  route: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default App;\n","import { FETCH_MOVIES } from '../actionTypes/moviesActionTypes';\n\n/**\n * Action creator to fetch movie data.\n *\n */\nexport const fetchMovies = () => {\n  return {\n    type: FETCH_MOVIES,\n  };\n};\n\nexport default fetchMovies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styles from './MovieCard.scss';\n\n/**\n * Its a functional component uded to display the image of the movie.\n */\nconst MovieCard = ({ data, isFromHistory }) => {\n  return (\n    <div className={styles.cardMainContainer} data-test-id=\"cardMainContainer\">\n      <div className={styles.cardContainer}>\n        <Link\n          className={styles.cardLink}\n          to={`/movieDetails?movieId=${data.id}&fromHistory=${isFromHistory}`}\n        >\n          <img src={data.images[0].url} alt={data.images[0].type} />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  data: PropTypes.objectOf(PropTypes.object),\n  isFromHistory: PropTypes.bool,\n};\n\nMovieCard.defaultProps = {\n  isFromHistory: false,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport MovieCard from '../MovieCard/MovieCard';\nimport styles from './MovieCategory.scss';\n\nconst settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  lazyLoad: true,\n  slidesToShow: 7,\n  slidesToScroll: 7,\n  responsive: [\n    {\n      breakpoint: 1600,\n      settings: {\n        slidesToShow: 6,\n        slidesToScroll: 6,\n      },\n    },\n    {\n      breakpoint: 1380,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 5,\n      },\n    },\n    {\n      breakpoint: 1200,\n      settings: {\n        slidesToShow: 4,\n        slidesToScroll: 4,\n      },\n    },\n    {\n      breakpoint: 950,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n      },\n    },\n    {\n      breakpoint: 580,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n      },\n    },\n    {\n      breakpoint: 375,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        arrows: false,\n      },\n    },\n  ],\n};\n\n/**\n * Its a functional component uded to display the list of image card in a carausal.\n */\nconst MovieCategory = ({ dataItem }) => {\n  return (\n    <div key={dataItem.id} data-test-id=\"movieCategoryContainer\">\n      <h2>{dataItem.title}</h2>\n      <Slider {...settings} className={styles.sliderContainer}>\n        {dataItem.data &&\n          dataItem.data.length > 0 &&\n          dataItem.data.map(item => <MovieCard key={item.id} data={item} />)}\n      </Slider>\n    </div>\n  );\n};\n\nMovieCategory.propTypes = {\n  dataItem: PropTypes.objectOf(PropTypes.object),\n};\n\nexport default MovieCategory;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchMovies } from '../../actions/moviesAction';\nimport styles from './Home.scss';\nimport MovieCategory from '../../components/MovieCategory/MovieCategory';\n\n/**\n * Home is the class component used as home page and used to dispay movies based on category. Having route '/'\n */\nclass Home extends Component {\n  /**\n   * Components life cycle hook used to fetch list of movies.\n   *\n   * @override\n   */\n  componentDidMount() {\n    const { actions } = this.props;\n    actions.fetchMovies();\n  }\n\n  render() {\n    const { movieListData } = this.props;\n    return (\n      <div className={styles.homeContainer}>\n        {movieListData.map(dataItem => (\n          <MovieCategory key={dataItem.id} dataItem={dataItem} />\n        ))}\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  movieListData: PropTypes.arrayOf(PropTypes.object),\n  actions: PropTypes.objectOf(PropTypes.func).isRequired,\n};\n\nHome.defaultProps = {\n  movieListData: [],\n};\n\nconst mapStateToProps = ({ moviesData }) => ({\n  movieListData: moviesData.data,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({ fetchMovies }, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","import {\n  SET_MOVIE_HISTORY,\n  GET_MOVIE_HISTORY,\n} from '../actionTypes/movieHistoryTypes';\n\n/**\n * Action creator to movieHistory data.\n *\n */\nexport const setMovieHistory = movieId => {\n  return {\n    type: SET_MOVIE_HISTORY,\n    payload: { movieId },\n  };\n};\n\nexport const getMovieHistory = () => {\n  return {\n    type: GET_MOVIE_HISTORY,\n  };\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport MovieCard from '../../components/MovieCard/MovieCard';\nimport { getMovieHistory } from '../../actions/movieHistoryAction';\nimport styles from './History.scss';\n\n/**\n * History is the class component used to display histoy of previously watched video and having route '/history'\n */\nclass History extends Component {\n  componentDidMount() {\n    const { actions } = this.props;\n    actions.getMovieHistory();\n  }\n\n  render() {\n    const { movieHistoryData } = this.props;\n    return (\n      <div className={styles.historyContainer}>\n        {movieHistoryData.length > 0\n          ? movieHistoryData.map(item => (\n              <MovieCard key={item.id} data={item} isFromHistory /> // eslint-disable-line\n            ))\n          : 'No record found'}\n      </div>\n    );\n  }\n}\n\nHistory.propTypes = {\n  movieHistoryData: PropTypes.objectOf(PropTypes.object),\n  actions: PropTypes.objectOf(PropTypes.func).isRequired,\n};\n\nHistory.defaultProps = {\n  movieHistoryData: [],\n};\n\nconst mapStateToProps = ({ getHistoryData }) => ({\n  movieHistoryData: getHistoryData.data,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({ getMovieHistory }, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(History);\n","import { FETCH_MOVIES_DETAILS } from '../actionTypes/movieDetailsActionTypes';\n\n/**\n * Action creator to fetch movie detail data.\n *\n * @param {String} movieId\n */\nexport const fetchMoviesDetails = movieId => {\n  return {\n    type: FETCH_MOVIES_DETAILS,\n    movieId,\n  };\n};\n\nexport default fetchMoviesDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './VideoPlayer.scss';\n\n/**\n * Its a functional component uded as a video player.\n */\nconst VideoPlayer = ({ moviesDetailsData, togglePlay }) => {\n  return (\n    <div\n      className={styles.videoPlayerContainer}\n      data-test-id=\"videoPlayerContainer\"\n    >\n      <button className={styles.crossBtn} type=\"button\" onClick={togglePlay}>\n        <i className={`fa fa-times ${styles.crossIcon}`} />\n      </button>\n      <video className={styles.videoContainer} autoPlay controls>\n        <source\n          src={moviesDetailsData.contents && moviesDetailsData.contents[0].url}\n          type={`video/${moviesDetailsData.contents[0].format &&\n            moviesDetailsData.contents[0].format}`}\n        />\n      </video>\n    </div>\n  );\n};\n\nVideoPlayer.propTypes = {\n  moviesDetailsData: PropTypes.objectOf(PropTypes.object),\n  togglePlay: PropTypes.func.isRequired,\n};\n\nexport default VideoPlayer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport qs from 'query-string';\nimport { fetchMoviesDetails } from '../../actions/movieDetailsAction';\nimport styles from './MovieDetails.scss';\nimport { generateCategory } from '../../utils/utils';\nimport VideoPlayer from '../../components/VideoPlayer/VideoPlayer';\nimport { setMovieHistory } from '../../actions/movieHistoryAction';\n\n/**\n * MovieDetails is the class component used for movies detaied info. Having route '/movieDetails'\n */\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPlayer: false,\n    };\n  }\n\n  /**\n   * Components life cycle hook used to get query param and based on the query param fetch detailed info data of a movie.\n   *\n   * @override\n   */\n  componentDidMount() {\n    const {\n      actions,\n      location: { search },\n    } = this.props;\n    const searchObj = qs.parse(search);\n    actions.fetchMoviesDetails(searchObj.movieId);\n  }\n\n  /**\n   * It is used to updated the watch history and play/close the video\n   */\n  togglePlay = () => {\n    const { showPlayer } = this.state;\n    const {\n      moviesDetailsData,\n      actions,\n      location: { search },\n    } = this.props;\n    const searchObj = qs.parse(search);\n    if (!showPlayer && searchObj.fromHistory === 'false') {\n      actions.setMovieHistory(moviesDetailsData.id);\n    }\n    this.setState({ showPlayer: !showPlayer });\n  };\n\n  render() {\n    const { moviesDetailsData } = this.props;\n    const { showPlayer } = this.state;\n    return (\n      <div\n        className={styles.movieDetailsContainer}\n        data-test-id=\"movieDetailsContainer\"\n      >\n        {showPlayer ? (\n          <VideoPlayer\n            moviesDetailsData={moviesDetailsData}\n            togglePlay={this.togglePlay}\n          />\n        ) : (\n          <div className={styles.detailContainer}>\n            <div className={styles.infoContainer}>\n              <h2 className={styles.title}>{moviesDetailsData.title}</h2>\n              <p className={styles.desc}>{moviesDetailsData.description}</p>\n              <div className={styles.content}>\n                <div className={styles.item}>\n                  <div className={styles.itemHeader}>Director</div>\n                  <div>\n                    {moviesDetailsData.credits &&\n                      moviesDetailsData.credits[0].name}\n                  </div>\n                </div>\n                <div className={styles.item}>\n                  <div className={styles.itemHeader}>Category</div>\n                  <div>\n                    {generateCategory(\n                      moviesDetailsData && moviesDetailsData.categories,\n                    )}\n                  </div>\n                </div>\n                <div className={styles.item}>\n                  <div className={styles.itemHeader}>Type</div>\n                  <div>{moviesDetailsData.type}</div>\n                </div>\n                <div className={styles.item}>\n                  <div className={styles.itemHeader}>Rating</div>\n                  <div>\n                    {moviesDetailsData.parentalRatings &&\n                      moviesDetailsData.parentalRatings[0].rating}\n                  </div>\n                </div>\n                <div className={styles.item}>\n                  <div className={styles.itemHeader}>Scheme</div>\n                  <div>\n                    {moviesDetailsData.parentalRatings &&\n                      moviesDetailsData.parentalRatings[0].scheme}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={this.togglePlay}\n                type=\"button\"\n                className={styles.watchNowBtn}\n              >\n                <i\n                  className={`${styles.playIcon} fa fa-play`}\n                  aria-hidden=\"true\"\n                ></i>\n                <div className={styles.watchNowLabel}>Watch Now</div>\n              </button>\n            </div>\n            <div className={styles.imgContainer}>\n              <img\n                src={\n                  moviesDetailsData.images && moviesDetailsData.images[0].url\n                }\n                alt=\"Movie_Image\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  moviesDetailsData: PropTypes.objectOf(PropTypes.object),\n  actions: PropTypes.objectOf(PropTypes.func).isRequired,\n  location: PropTypes.objectOf(PropTypes.object),\n};\n\nMovieDetails.defaultProps = {\n  moviesDetailsData: {},\n  location: {},\n};\n\nconst mapStateToProps = ({ moviesDetailsData }) => ({\n  moviesDetailsData: moviesDetailsData.data,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      fetchMoviesDetails,\n      setMovieHistory,\n    },\n    dispatch,\n  ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MovieDetails);\n","/* istanbul ignore file */\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\n\nexport default (initialState, sagaRunner) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    reducers,\n    initialState,\n    applyMiddleware(sagaMiddleware),\n  );\n  sagaMiddleware.run(sagaRunner);\n  return store;\n};\n","import App from './App';\nimport HomePage from './containers/Home/Home';\nimport History from './containers/History/History';\nimport MovieDetails from './containers/MovieDetails/MovieDetails';\n\nexport default [\n  {\n    component: App,\n    routes: [\n      {\n        component: History,\n        path: '/history',\n        exact: true,\n      },\n      {\n        component: MovieDetails,\n        path: '/movieDetails',\n        exact: true,\n      },\n      {\n        component: HomePage,\n        path: '/',\n      },\n    ],\n  },\n];\n","/* istanbul ignore file */\nimport 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { renderRoutes } from 'react-router-config';\nimport rootSaga from './sagas';\nimport createStore from './createStore';\nimport routes from './routes';\n\nconst store = createStore({}, rootSaga);\n\nReactDOM.hydrate(\n  <Provider store={store}>\n    <BrowserRouter>\n      <div>{renderRoutes(routes)}</div>\n    </BrowserRouter>\n  </Provider>,\n  document.querySelector('#root'),\n);\n","/* istanbul ignore file */\nimport { fork } from 'redux-saga/effects';\nimport { fetchMoviesWatcher } from './moviesSaga';\nimport { fetchMovieDetailsWatcher } from './movieDetailsSaga';\nimport {\n  setMovieHistoryWatcher,\n  getMovieHistoryWatcher,\n} from './movieHistorySaga';\n\n/**\n * Its a root saga of the application\n */\nexport default function* rootSagas() {\n  yield* [\n    fork(fetchMoviesWatcher),\n    fork(fetchMovieDetailsWatcher),\n    fork(setMovieHistoryWatcher),\n    fork(getMovieHistoryWatcher),\n  ];\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"headerContainer___2ZW8F\",\"vodBtn\":\"vodBtn___2ca1y\",\"hLink\":\"hLink___vSkoL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoPlayerContainer\":\"videoPlayerContainer___3UQQC\",\"crossBtn\":\"crossBtn___T2gcn\",\"crossIcon\":\"crossIcon___2hnXE\",\"videoContainer\":\"videoContainer___3h2-w\"};"],"sourceRoot":""}